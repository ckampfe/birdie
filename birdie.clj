;; gorilla-repl.fileformat = 1

;; **
;;; # birdie performance journey
;; **

;; **
;;; Recently I began work on a library called [Birdie](https://github.com/ckampfe/birdie).
;;; 
;;; Birdie is an implementation to encode and decode [Erlang's External Term Format](http://erlang.org/doc/apps/erts/erl_ext_dist.html) in Clojurescript.
;;; 
;;; Erlang Term Format, or ETF, is a high performance binary protcol native to the Erlang VM. 
;;; With it, you can encode Erlang data - "terms" - to binary data, and deserialize valid binary data into Erlang terms.
;;; 
;;; If you're familiar with JSON, ETF is to Erlang as JSON is to Javascript. As an analogy, this isn't exactly right, but I use it to show that ETF has equivalent built-in support on the Erlang VM as JSON does with Javascript.
;;; 
;;; Birdie brings this to the client and NodeJS, by converting Clojurescript/Javascript expressions to and from ETF. Birdie is not the first library to do this in the browser, but I am not aware of another Clojurescript implementation.
;;; 
;;; It is not a full implementation, insofar as it does not provide decoders for every single addressable Erlang and Clojure type (for example, things like pids and ports have no Clojurescript/Javascript representation), but it is roughly equiavalent to JSON in expressable types.
;;; 
;;; My goals for Birdie are:
;;; 
;;; 1. Learn about ETF
;;; 2. Produce a working, tested implementation. Maybe not production grade, but at minimum good enough for others to learn from and extend if they want to.
;;; 3. Learn how to optimize Clojurescript
;;; 3. Reasonable performance. For me, this means within a few multiples of the incredibly optimized JSON parsing stack in modern JS engines
;; **

;; **
;;; ## Why binary? Why Birdie?
;; **

;; **
;;; The tradeoffs of text and binary formats are interesting.
;;; Textual formats are human-readable, but bulky and require a parse step.
;;; 
;;; Not designed to be human-readable, binary formats are, generally, more information-dense, and faster.
;;; They do not require a parse step per se, as the program can in many situations
;;; address blocks of bytes at a time rather dispatching actions on the basis of one byte at a time.
;; **

;; **
;;; For example, benchmarking ETF vs. JSON by the [Jason](https://github.com/michalmuskala/jason) library shows ETF way out ahead on both encoding and decoding.
;;; 
;;; Over the past few weeks of writing Birdie I've progressively optimized its implementation. We'll get to the benchmarks, but first, a high level description of how Birdie converts between Clojurescript data and ETF.
;; **

;; **
;;; ## How
;; **

;; **
;;; How does Birdie work? There are two things you can do with a protocol like this. Encoding and decoding. Encoding corresponds to `JSON.stringify` and decoding corresponds to `JSON.parse`.
;;; 
;;; Birdie exposes these two operations through `birdie.core/encode` and `birdie.core/decode`.
;;; 
;;; #### Encoding
;;; 
;;; Birdie defines a protocol, `Encodable`, with one method, `do-encode`. For those unfamiliar with Clojurescript, a protocol is one of Clojurescript's mechanisms for doing polymorphic dispatch. Specifically, type-based polymorphic dispatch.
;;; 
;;; That is to say any type - Clojurescript or Javascript - having an implementation of `Encodable` can be a member of an expression passed to `encode` and it will be encoded to ETF. We can (and in Birdie, do) call `do-encode` on arbitrary types, and Clojurescript takes care of calling the right implementation. Other languages may call this "dynamic dispatch" or "ad-hoc polymorphism".
;;; 
;;; The implementation of `Encodable` for Clojurescript keywords looks like:
;;; 
;;; ```clojure
;;; (extend-protocol Encodable
;;;   cljs.core/Keyword
;;;   (do-encode [this] (encode-keyword this))
;;; 
;;; ```
;;; 
;;; The actual implementation of `encode-keyword` is not super important,
;;; but it is a good occasion to talk about ETF.
;;; 
;;; ETF (most types, anyway) is constructed of a version byte, tag byte, a number of length bytes, and then data bytes.
;;; 
;;; For example, imagine we did make the function call `(do-encode :ok)`.
;;; The result of this call is a 5-byte vector, `(131 119 2 111 107)`, in order made up of a version byte, a tag byte, a length byte, and 2 data bytes. 
;;; 
;;; The version byte is `131`, saying which version of ETF we are working with.
;;; 
;;; `119` is the tag byte, which maps directly to a data type. In this case, `SMALL_ATOM_UTF8_EXT`, meaning our keyword has been mapped to the small UTF8 encoding of an Erlang atom. (You can find the whole doc [here](http://erlang.org/doc/apps/erts/erl_ext_dist.html))
;;; 
;;; The spec for `SMALL_ATOM_UTF8_EXT` says that the remainder of the encoding is 1 byte for the length of the atom, followed by that many UTF8 encoded bytes. In our case, the length byte is `2`, and the two data bytes `111` and `107` are the UTF8 byte encodings of `o` and `k`, respectively.
;;; 
;;; Calling `encode` with a complex type, like a Clojurescript vector, will find the `Encodable` implementation for `cljs.core/PersistentVector`, calling its `do-encode` method, which in turn calls `encode-seq`.
;;; 
;;; `encode-seq` will `reduce` over the Clojurescript vector, calling `do-encode` on every constituent item (a vector is equivalent to an array or list in other languages), building up a new vector comprising the combined ETF bytes representation of every item in the original vector.
;;; 
;;; When this is complete, `encode-seq` does three more things. First, it gets the length of the input vector and turns it into a 4-bytes big endian, concatenating these 4 bytes onto the front of the ETF byte vector. Then, it concats on the tag byte, which for Erlang lists is `108`. Then, it adds the version byte, `131`.
;;; 
;;; 
;;; #### Decoding
;;; 
;;; Decoding ETF into Clojurescript data is a bit more complicated, but not much.
;;; 
;;; The decoding process first creates some starting state. This state is comprised of three things. The source ETF byte vector, a result which is initially empty, and a cursor position, which is initially 0.
;;; 
;;; 
;;; 
;;; 
;;; 
;;; 
;; **

;; **
;;; ## "Was he slow?"
;; **

;; **
;;; There have been a few phases of my work on Birdie so far.
;;; 
;;; After getting a mostly working implementation, the decoding portion has seen so far 5 optimization phases. The encoding portion has seen one optimization phase.
;;; 
;;; ### Decoding
;;; 
;;; #### Phase 0
;;; 
;;; I first endeavored to make a correct implementation.
;;; 
;;; As I knew nothing of ETF's implementation, this involved lots of reading the docs and using
;;; the safest possible Clojurescript facilities, which are the normal immutable persistent collections and sequence operations.
;;; I set up the project, wrote simple implementations of encoding and decoding for the scalar types, and moved on to the composite types all while writing a few unit tests.
;;; 
;;; #### Phase 1
;;; 
;;; 
;;; Define state as a record instead of an atom of a map. I've seen various rumblings around the web about records having different access characteristics in Clojurescript than maps.
;;; 
;;; 
;;; Went from this:
;;; 
;;; ```
;;; (defn make-state [bytes]
;;;   (atom {:bytes bytes
;;;          :result []}))
;;;          
;;; (defn take-bytes! [n state]
;;;   (let [bytes (take n (:bytes @state))]
;;;     (swap! state
;;;            (fn [s] (update s :bytes (fn [b] (drop n b)))))
;;;     bytes))
;;; ```
;;; 
;;; 
;;; To this:
;;; 
;;; ```
;;; (defrecord State [bytes result])
;;; 
;;; (defn take-bytes! [n state]
;;;   (let [[bytes remaining] (split-at n (.-bytes state))]
;;;     (set! (.-bytes state) remaining)
;;;     bytes))
;;; ```
;;; 
;;; 
;;; #### Phase 2
;;; 
;;; Transients
;;; 
;;; Changed the internal element decoding in lists/maps from:
;;; 
;;; ```
;;; (mapv (fn [_] (.-result (do-decode state)))
;;;                        (range length))
;;; ```
;;; 
;;; to
;;; 
;;; ```
;;; (loop [i 0
;;;        c (transient [])]
;;;   (if (< i length)
;;;     (recur (inc i)
;;;            (conj! c (.-result (do-decode state))))
;;;     c))
;;; ```
;;; 
;;; 
;;; #### Phase 3
;;; 
;;; Constant time dispatch function
;;; 
;;; 
;;; Went form a typemap and multimethod-based dispatch like
;;; 
;;; ```
;;; (defmethod do-decode :ATOM_UTF8 [state]
;;;   (add-to-result! (common-atom state)
;;;                   state))
;;; 
;;; ```
;;; 
;;; to a `case` expression dispatching on the flag byte directly:
;;; 
;;; ```
;;; (defn dispatch [state]
;;;   (case (take-byte! state)
;;;     70 (decode-new-float state)
;;;     97 (decode-small-integer state)
;;;     98 (decode-integer state)
;;;     100 (decode-atom state)
;;;     104 (decode-small-tuple state)
;;;     105 (decode-large-tuple state)
;;;     106 (decode-nil state)
;;;     107 (decode-string state)
;;;     108 (decode-list state)
;;;     109 (decode-binary state)
;;;     110 (decode-small-big state)
;;;     111 (decode-large-big state)
;;;     116 (decode-map state)
;;;     118 (decode-atom-utf8 state)
;;;     119 (decode-small-atom-utf8 state)
;;;     (decode-default state)))
;;; ```
;;; 
;;; 
;;; #### Phase 4
;;; 
;;; Cursor-based byte consumption with transients
;;; 
;;; Before:
;;; 
;;; ```
;;; (defn take-bytes! [n state]
;;;   (let [[bytes remaining] (split-at n (.-bytes state))]
;;;     (set! (.-bytes state) remaining)
;;;     bytes))
;;; ```
;;; 
;;; After:
;;; 
;;; ```
;;; (defn take-bytes! [n state]
;;;   (loop [i 0
;;;          bytes (transient [])
;;;          pos (.-position state)]
;;;     (if (< i n)
;;;       (recur (inc i)
;;;              (conj! bytes (nth (.-bytes state) pos))
;;;              (inc pos))
;;;       (do
;;;         (set! (.-position state) pos)
;;;         (persistent! bytes)))))
;;; 
;;; ```
;;; 
;;; 
;;; #### Phase 5
;;; 
;;; Cursor-based byte consumption with mutable JS array; preallocate byte slices
;;; 
;;; Finally, we took the previous byte cursor implementation and changed it to this:
;;; 
;;; ```
;;; (defn take-bytes! [n state]
;;;   (let [bytes (make-array n)]
;;;     (loop [i 0
;;;            pos (.-position state)]
;;;       (if (< i n)
;;;         (do
;;;           (aset bytes i (nth (.-bytes state) pos))
;;;           (recur (inc i)
;;;                  (inc pos)))
;;;         (do
;;;           (set! (.-position state) pos)
;;;           bytes)))))
;;; ```
;;; 
;;; Note that `bytes` is now preallocated to the exact size that the caller has request.
;;; Before, it would have to grow this collection with the addition of every element.
;;; Also observe that we are using `(make-array)`, which is a native Javascript array rather
;;; than a Clojurescript persistent or transient vector as before.
;;; 
;;; 
;;; ### Encoding
;;; 
;;; #### Phase 0
;;; 
;;; The initial functioning implementation for encoding Clojurescript expressions to ETF
;;; used multimethods, like this:
;;; 
;;; ```
;;; (defmethod encode cljs.core/PersistentHashMap [exp] (encode-map exp))
;;; ```
;;; 
;;; I reached for this method because it is expressive, intuitive, and extensible.
;;; It was easy to write tests piecemeal, and back into functionality even without having a fully-working implementation for every type.
;;; 
;;; #### Phase 1
;;; 
;;; So far the only optimization phase on the encoding side has been to swap out
;;; multimethod dispatch for protocol-based dispatch, like this:
;;; 
;;; ```
;;; (defprotocol Encodable
;;;   (do-encode [this]))
;;;   
;;; (extend-protocol Encodable
;;;   cljs.core/Keyword
;;;   (do-encode [this] (encode-keyword this)))
;;;   
;;;   ;; rest of implementation omitted
;;; ```
;;; 
;;; while also swapping out the inner loops in complex types for the `transient` based approach used on the decoding side.
;;; 
;;; #### Phase 2
;;; 
;;; Javascript arrays
;;; 
;;; (insert code here)
;; **

;; **
;;; ## Benchmark methodology
;;; 
;;; I ran the benchmarks using the great [Lumo](https://github.com/anmonteiro/lumo) Clojurescript runtime, which uses NodeJS. Being on OSX, I could use [Planck](http://planck-repl.org/), which uses JavaScriptCore instead, but I felt Node represented a decent, consistent runtime across a multiple different platforms that approximated Chrome. Next steps would be to build a harness to run these benchmarks in major browsers, but Lumo was close at hand and let me get good ballpark figures quickly.
;;; 
;;; My machine is a 2015 i7 Macbook Pro, and I closed all resource intensive stuff like Firefox, Slack, Spotify, etc., before running the benchmarks. While even a 3 year old i7 Macbook Pro is likely more powerful than most consumer hardware out there today, it represents a good projection of where most phones and laptops will be in a year or two, if they are not already there. It is my hope that should you try to replicate the results that follow, you will not get the exact same numbers, but that you would at least get similar differences between the optimization phases.
;;; 
;;; The [benchmarks](https://github.com/ckampfe/birdie/blob/master/decode-bench.cljs) themselves
;;; are not elaborate.
;;; 
;;; They use the built-in `simple-benchmark` functionality, which lets you time how long it takes to run a bit of code a specified number of times.
;;; 
;;; You can check the benchmark source for more detail, but each benchmark involves encoding and decoding a specific piece of data a number of times in a tight loop, as fast as it can.
;;; 
;;; For decoding benchmarks, each individual benchmark is run both with `birdie.core/decode` as well as `JSON.parse`.
;;; 
;;; For encoding bencharmks, each individual bencharmk is run both with `birdie.core/encode` as well as `JSON.stringify`.
;;; 
;;; The example data follows.
;;; 
;;; - a small vector of integers
;;; - a small vector strings
;;; - a large vector of integers
;;; - a large heterogenous vector composed of a few different datatypes
;;; - a small map
;;; - a large map
;;; 
;;; `small` data is run 10,000 times, and `large` data is run 100 times.
;;; 
;;; Individually, each benchmark is run 8 times in a row. The first five runs are dry runs in order to allow Node to cache/JIT the application code and achieve a steady state. The results of those 5 runs are not recorded. The final three runs each record their runtime in milliseconds. For this post, I chose the lowest of the 3 reported runs to show how fast the code could be expected to go in a steady state.
;;; 
;;; It's valid to question why I didn't choose the median or mean of the three runs, but I can tell you that on my hardware there was little meainingful variance between any of the three runs for any of the 6 benchmarks on any of the 6 optimization phases. Node reached a predictable state with few outliers, as nothing else was competing for resources either in the process itself or on the OS. The raw data is committed in each branch if you are curious.
;;; 
;;; 
;; **

;; @@
(ns birdie-performance.core
  (:require [gorilla-plot.core :as plot]
            [gorilla-repl.table :as table]
            [gorilla-repl.html :as html]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(def decode-data
  {"small vector integers; 10,000 iterations"  [296 231 214 157 88 40 197]
   "small vector strings; 10,000 iterations"   [598 484 491 450 253 144 49]
   "large vector integers; 100 iterations"     [6870 5450 5334 4743 2806 1558 3410]
   "large heterogenous vector; 100 iterations" [11449 9077 9115 6994 3981 2082 2769]
   "small map; 10,000 iterations"              [672 507 553 463 257 121 155]
   "large map; 100 iterations"                 [8141 6485 6495 5560 3339 1595 2085]
           })
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;birdie-performance.core/decode-data</span>","value":"#'birdie-performance.core/decode-data"}
;; <=

;; @@
(defn plot-decode-benchmark [[name data-in-order]]
  [name (plot/bar-chart [:unoptimized :one :two :three :four :five :json] data-in-order)
        (table/table-view (into [] (zipmap [:unoptimized :one :two :three :four :five :json] data-in-order ))
                          :columns ["phase" "runtime (milliseconds)"] ) 
   ])
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;birdie-performance.core/plot-decode-benchmark</span>","value":"#'birdie-performance.core/plot-decode-benchmark"}
;; <=

;; **
;;; ## Decoding benchmarks
;;; 
;;; Things to note:
;;; 
;;; - The legend, describing the optimization phases
;;; - The rightmost bar in the bar graph is the time for native JSON decoding using `JSON.parse`
;; **

;; @@
(table/table-view
  (concat [["legend" (table/table-view [['unoptimized "none"]
                                        ['one "state as record"]
                                        ['two "transients"]
                                        ['three "constant time dispatch"]
                                        ['four "cursor"]
                                        ['five "cursor, native js array, preallocate slices"]]
                                       :columns ['phase 'optimizations])]]
  (map plot-decode-benchmark decode-data)
          
          )
  :columns [(html/html-view "Benchmark") (html/html-view "Plot")])
;; @@
;; =>
;;; {"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"Benchmark","value":"#gorilla_repl.html.HtmlView{:content \"Benchmark\"}"},{"type":"html","content":"Plot","value":"#gorilla_repl.html.HtmlView{:content \"Plot\"}"}],"value":"[#gorilla_repl.html.HtmlView{:content \"Benchmark\"} #gorilla_repl.html.HtmlView{:content \"Plot\"}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;legend&quot;</span>","value":"\"legend\""},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-symbol'>phase</span>","value":"phase"},{"type":"html","content":"<span class='clj-symbol'>optimizations</span>","value":"optimizations"}],"value":"[phase optimizations]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>unoptimized</span>","value":"unoptimized"},{"type":"html","content":"<span class='clj-string'>&quot;none&quot;</span>","value":"\"none\""}],"value":"[unoptimized \"none\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>one</span>","value":"one"},{"type":"html","content":"<span class='clj-string'>&quot;state as record&quot;</span>","value":"\"state as record\""}],"value":"[one \"state as record\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>two</span>","value":"two"},{"type":"html","content":"<span class='clj-string'>&quot;transients&quot;</span>","value":"\"transients\""}],"value":"[two \"transients\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>three</span>","value":"three"},{"type":"html","content":"<span class='clj-string'>&quot;constant time dispatch&quot;</span>","value":"\"constant time dispatch\""}],"value":"[three \"constant time dispatch\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>four</span>","value":"four"},{"type":"html","content":"<span class='clj-string'>&quot;cursor&quot;</span>","value":"\"cursor\""}],"value":"[four \"cursor\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>five</span>","value":"five"},{"type":"html","content":"<span class='clj-string'>&quot;cursor, native js array, preallocate slices&quot;</span>","value":"\"cursor, native js array, preallocate slices\""}],"value":"[five \"cursor, native js array, preallocate slices\"]"}],"value":"#gorilla_repl.table.TableView{:contents [[unoptimized \"none\"] [one \"state as record\"] [two \"transients\"] [three \"constant time dispatch\"] [four \"cursor\"] [five \"cursor, native js array, preallocate slices\"]], :opts (:columns [phase optimizations])}"}],"value":"[\"legend\" #gorilla_repl.table.TableView{:contents [[unoptimized \"none\"] [one \"state as record\"] [two \"transients\"] [three \"constant time dispatch\"] [four \"cursor\"] [five \"cursor, native js array, preallocate slices\"]], :opts (:columns [phase optimizations])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small vector integers; 10,000 iterations&quot;</span>","value":"\"small vector integers; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"965b6165-9357-4e96-b524-2aa590e41a21","values":[{"x":"unoptimized","y":296},{"x":"one","y":231},{"x":"two","y":214},{"x":"three","y":157},{"x":"four","y":88},{"x":"five","y":40},{"x":"json","y":197}]}],"marks":[{"type":"rect","from":{"data":"965b6165-9357-4e96-b524-2aa590e41a21"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"965b6165-9357-4e96-b524-2aa590e41a21","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"965b6165-9357-4e96-b524-2aa590e41a21","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"965b6165-9357-4e96-b524-2aa590e41a21\", :values ({:x :unoptimized, :y 296} {:x :one, :y 231} {:x :two, :y 214} {:x :three, :y 157} {:x :four, :y 88} {:x :five, :y 40} {:x :json, :y 197})}], :marks [{:type \"rect\", :from {:data \"965b6165-9357-4e96-b524-2aa590e41a21\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>296</span>","value":"296"}],"value":"[:unoptimized 296]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>231</span>","value":"231"}],"value":"[:one 231]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>214</span>","value":"214"}],"value":"[:two 214]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>157</span>","value":"157"}],"value":"[:three 157]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>88</span>","value":"88"}],"value":"[:four 88]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>40</span>","value":"40"}],"value":"[:five 40]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>197</span>","value":"197"}],"value":"[:json 197]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 296] [:one 231] [:two 214] [:three 157] [:four 88] [:five 40] [:json 197]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small vector integers; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"965b6165-9357-4e96-b524-2aa590e41a21\", :values ({:x :unoptimized, :y 296} {:x :one, :y 231} {:x :two, :y 214} {:x :three, :y 157} {:x :four, :y 88} {:x :five, :y 40} {:x :json, :y 197})}], :marks [{:type \"rect\", :from {:data \"965b6165-9357-4e96-b524-2aa590e41a21\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 296] [:one 231] [:two 214] [:three 157] [:four 88] [:five 40] [:json 197]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small vector strings; 10,000 iterations&quot;</span>","value":"\"small vector strings; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"da3d289f-b828-42a7-ba31-1e904053a7f2","values":[{"x":"unoptimized","y":598},{"x":"one","y":484},{"x":"two","y":491},{"x":"three","y":450},{"x":"four","y":253},{"x":"five","y":144},{"x":"json","y":49}]}],"marks":[{"type":"rect","from":{"data":"da3d289f-b828-42a7-ba31-1e904053a7f2"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"da3d289f-b828-42a7-ba31-1e904053a7f2","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"da3d289f-b828-42a7-ba31-1e904053a7f2","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :values ({:x :unoptimized, :y 598} {:x :one, :y 484} {:x :two, :y 491} {:x :three, :y 450} {:x :four, :y 253} {:x :five, :y 144} {:x :json, :y 49})}], :marks [{:type \"rect\", :from {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>598</span>","value":"598"}],"value":"[:unoptimized 598]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>484</span>","value":"484"}],"value":"[:one 484]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>491</span>","value":"491"}],"value":"[:two 491]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>450</span>","value":"450"}],"value":"[:three 450]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>253</span>","value":"253"}],"value":"[:four 253]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>144</span>","value":"144"}],"value":"[:five 144]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>49</span>","value":"49"}],"value":"[:json 49]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 598] [:one 484] [:two 491] [:three 450] [:four 253] [:five 144] [:json 49]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small vector strings; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :values ({:x :unoptimized, :y 598} {:x :one, :y 484} {:x :two, :y 491} {:x :three, :y 450} {:x :four, :y 253} {:x :five, :y 144} {:x :json, :y 49})}], :marks [{:type \"rect\", :from {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 598] [:one 484] [:two 491] [:three 450] [:four 253] [:five 144] [:json 49]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large vector integers; 100 iterations&quot;</span>","value":"\"large vector integers; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"a9a72157-dc24-4451-9d69-c08957c94f51","values":[{"x":"unoptimized","y":6870},{"x":"one","y":5450},{"x":"two","y":5334},{"x":"three","y":4743},{"x":"four","y":2806},{"x":"five","y":1558},{"x":"json","y":3410}]}],"marks":[{"type":"rect","from":{"data":"a9a72157-dc24-4451-9d69-c08957c94f51"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"a9a72157-dc24-4451-9d69-c08957c94f51","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"a9a72157-dc24-4451-9d69-c08957c94f51","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a9a72157-dc24-4451-9d69-c08957c94f51\", :values ({:x :unoptimized, :y 6870} {:x :one, :y 5450} {:x :two, :y 5334} {:x :three, :y 4743} {:x :four, :y 2806} {:x :five, :y 1558} {:x :json, :y 3410})}], :marks [{:type \"rect\", :from {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>6870</span>","value":"6870"}],"value":"[:unoptimized 6870]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>5450</span>","value":"5450"}],"value":"[:one 5450]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>5334</span>","value":"5334"}],"value":"[:two 5334]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>4743</span>","value":"4743"}],"value":"[:three 4743]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>2806</span>","value":"2806"}],"value":"[:four 2806]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>1558</span>","value":"1558"}],"value":"[:five 1558]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>3410</span>","value":"3410"}],"value":"[:json 3410]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 6870] [:one 5450] [:two 5334] [:three 4743] [:four 2806] [:five 1558] [:json 3410]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large vector integers; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a9a72157-dc24-4451-9d69-c08957c94f51\", :values ({:x :unoptimized, :y 6870} {:x :one, :y 5450} {:x :two, :y 5334} {:x :three, :y 4743} {:x :four, :y 2806} {:x :five, :y 1558} {:x :json, :y 3410})}], :marks [{:type \"rect\", :from {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 6870] [:one 5450] [:two 5334] [:three 4743] [:four 2806] [:five 1558] [:json 3410]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large heterogenous vector; 100 iterations&quot;</span>","value":"\"large heterogenous vector; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"20c0b60b-046a-4450-86ad-9ad9e2be4080","values":[{"x":"unoptimized","y":11449},{"x":"one","y":9077},{"x":"two","y":9115},{"x":"three","y":6994},{"x":"four","y":3981},{"x":"five","y":2082},{"x":"json","y":2769}]}],"marks":[{"type":"rect","from":{"data":"20c0b60b-046a-4450-86ad-9ad9e2be4080"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"20c0b60b-046a-4450-86ad-9ad9e2be4080","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"20c0b60b-046a-4450-86ad-9ad9e2be4080","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :values ({:x :unoptimized, :y 11449} {:x :one, :y 9077} {:x :two, :y 9115} {:x :three, :y 6994} {:x :four, :y 3981} {:x :five, :y 2082} {:x :json, :y 2769})}], :marks [{:type \"rect\", :from {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>11449</span>","value":"11449"}],"value":"[:unoptimized 11449]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>9077</span>","value":"9077"}],"value":"[:one 9077]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>9115</span>","value":"9115"}],"value":"[:two 9115]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>6994</span>","value":"6994"}],"value":"[:three 6994]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>3981</span>","value":"3981"}],"value":"[:four 3981]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>2082</span>","value":"2082"}],"value":"[:five 2082]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>2769</span>","value":"2769"}],"value":"[:json 2769]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 11449] [:one 9077] [:two 9115] [:three 6994] [:four 3981] [:five 2082] [:json 2769]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large heterogenous vector; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :values ({:x :unoptimized, :y 11449} {:x :one, :y 9077} {:x :two, :y 9115} {:x :three, :y 6994} {:x :four, :y 3981} {:x :five, :y 2082} {:x :json, :y 2769})}], :marks [{:type \"rect\", :from {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 11449] [:one 9077] [:two 9115] [:three 6994] [:four 3981] [:five 2082] [:json 2769]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small map; 10,000 iterations&quot;</span>","value":"\"small map; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"a831e3c0-9302-4447-a22d-000d35d04396","values":[{"x":"unoptimized","y":672},{"x":"one","y":507},{"x":"two","y":553},{"x":"three","y":463},{"x":"four","y":257},{"x":"five","y":121},{"x":"json","y":155}]}],"marks":[{"type":"rect","from":{"data":"a831e3c0-9302-4447-a22d-000d35d04396"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"a831e3c0-9302-4447-a22d-000d35d04396","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"a831e3c0-9302-4447-a22d-000d35d04396","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a831e3c0-9302-4447-a22d-000d35d04396\", :values ({:x :unoptimized, :y 672} {:x :one, :y 507} {:x :two, :y 553} {:x :three, :y 463} {:x :four, :y 257} {:x :five, :y 121} {:x :json, :y 155})}], :marks [{:type \"rect\", :from {:data \"a831e3c0-9302-4447-a22d-000d35d04396\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>672</span>","value":"672"}],"value":"[:unoptimized 672]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>507</span>","value":"507"}],"value":"[:one 507]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>553</span>","value":"553"}],"value":"[:two 553]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>463</span>","value":"463"}],"value":"[:three 463]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>257</span>","value":"257"}],"value":"[:four 257]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>121</span>","value":"121"}],"value":"[:five 121]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>155</span>","value":"155"}],"value":"[:json 155]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 672] [:one 507] [:two 553] [:three 463] [:four 257] [:five 121] [:json 155]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small map; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a831e3c0-9302-4447-a22d-000d35d04396\", :values ({:x :unoptimized, :y 672} {:x :one, :y 507} {:x :two, :y 553} {:x :three, :y 463} {:x :four, :y 257} {:x :five, :y 121} {:x :json, :y 155})}], :marks [{:type \"rect\", :from {:data \"a831e3c0-9302-4447-a22d-000d35d04396\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 672] [:one 507] [:two 553] [:three 463] [:four 257] [:five 121] [:json 155]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large map; 100 iterations&quot;</span>","value":"\"large map; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"20fb11ea-a47d-41ba-a44a-70866d883f1b","values":[{"x":"unoptimized","y":8141},{"x":"one","y":6485},{"x":"two","y":6495},{"x":"three","y":5560},{"x":"four","y":3339},{"x":"five","y":1595},{"x":"json","y":2085}]}],"marks":[{"type":"rect","from":{"data":"20fb11ea-a47d-41ba-a44a-70866d883f1b"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"20fb11ea-a47d-41ba-a44a-70866d883f1b","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"20fb11ea-a47d-41ba-a44a-70866d883f1b","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :values ({:x :unoptimized, :y 8141} {:x :one, :y 6485} {:x :two, :y 6495} {:x :three, :y 5560} {:x :four, :y 3339} {:x :five, :y 1595} {:x :json, :y 2085})}], :marks [{:type \"rect\", :from {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>8141</span>","value":"8141"}],"value":"[:unoptimized 8141]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>6485</span>","value":"6485"}],"value":"[:one 6485]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:two</span>","value":":two"},{"type":"html","content":"<span class='clj-long'>6495</span>","value":"6495"}],"value":"[:two 6495]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:three</span>","value":":three"},{"type":"html","content":"<span class='clj-long'>5560</span>","value":"5560"}],"value":"[:three 5560]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:four</span>","value":":four"},{"type":"html","content":"<span class='clj-long'>3339</span>","value":"3339"}],"value":"[:four 3339]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:five</span>","value":":five"},{"type":"html","content":"<span class='clj-long'>1595</span>","value":"1595"}],"value":"[:five 1595]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>2085</span>","value":"2085"}],"value":"[:json 2085]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 8141] [:one 6485] [:two 6495] [:three 5560] [:four 3339] [:five 1595] [:json 2085]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large map; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :values ({:x :unoptimized, :y 8141} {:x :one, :y 6485} {:x :two, :y 6495} {:x :three, :y 5560} {:x :four, :y 3339} {:x :five, :y 1595} {:x :json, :y 2085})}], :marks [{:type \"rect\", :from {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 8141] [:one 6485] [:two 6495] [:three 5560] [:four 3339] [:five 1595] [:json 2085]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"}],"value":"#gorilla_repl.table.TableView{:contents ([\"legend\" #gorilla_repl.table.TableView{:contents [[unoptimized \"none\"] [one \"state as record\"] [two \"transients\"] [three \"constant time dispatch\"] [four \"cursor\"] [five \"cursor, native js array, preallocate slices\"]], :opts (:columns [phase optimizations])}] [\"small vector integers; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"965b6165-9357-4e96-b524-2aa590e41a21\", :values ({:x :unoptimized, :y 296} {:x :one, :y 231} {:x :two, :y 214} {:x :three, :y 157} {:x :four, :y 88} {:x :five, :y 40} {:x :json, :y 197})}], :marks [{:type \"rect\", :from {:data \"965b6165-9357-4e96-b524-2aa590e41a21\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"965b6165-9357-4e96-b524-2aa590e41a21\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 296] [:one 231] [:two 214] [:three 157] [:four 88] [:five 40] [:json 197]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"small vector strings; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :values ({:x :unoptimized, :y 598} {:x :one, :y 484} {:x :two, :y 491} {:x :three, :y 450} {:x :four, :y 253} {:x :five, :y 144} {:x :json, :y 49})}], :marks [{:type \"rect\", :from {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"da3d289f-b828-42a7-ba31-1e904053a7f2\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 598] [:one 484] [:two 491] [:three 450] [:four 253] [:five 144] [:json 49]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large vector integers; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a9a72157-dc24-4451-9d69-c08957c94f51\", :values ({:x :unoptimized, :y 6870} {:x :one, :y 5450} {:x :two, :y 5334} {:x :three, :y 4743} {:x :four, :y 2806} {:x :five, :y 1558} {:x :json, :y 3410})}], :marks [{:type \"rect\", :from {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a9a72157-dc24-4451-9d69-c08957c94f51\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 6870] [:one 5450] [:two 5334] [:three 4743] [:four 2806] [:five 1558] [:json 3410]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large heterogenous vector; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :values ({:x :unoptimized, :y 11449} {:x :one, :y 9077} {:x :two, :y 9115} {:x :three, :y 6994} {:x :four, :y 3981} {:x :five, :y 2082} {:x :json, :y 2769})}], :marks [{:type \"rect\", :from {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20c0b60b-046a-4450-86ad-9ad9e2be4080\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 11449] [:one 9077] [:two 9115] [:three 6994] [:four 3981] [:five 2082] [:json 2769]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"small map; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"a831e3c0-9302-4447-a22d-000d35d04396\", :values ({:x :unoptimized, :y 672} {:x :one, :y 507} {:x :two, :y 553} {:x :three, :y 463} {:x :four, :y 257} {:x :five, :y 121} {:x :json, :y 155})}], :marks [{:type \"rect\", :from {:data \"a831e3c0-9302-4447-a22d-000d35d04396\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"a831e3c0-9302-4447-a22d-000d35d04396\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 672] [:one 507] [:two 553] [:three 463] [:four 257] [:five 121] [:json 155]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large map; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :values ({:x :unoptimized, :y 8141} {:x :one, :y 6485} {:x :two, :y 6495} {:x :three, :y 5560} {:x :four, :y 3339} {:x :five, :y 1595} {:x :json, :y 2085})}], :marks [{:type \"rect\", :from {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"20fb11ea-a47d-41ba-a44a-70866d883f1b\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 8141] [:one 6485] [:two 6495] [:three 5560] [:four 3339] [:five 1595] [:json 2085]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]), :opts (:columns [#gorilla_repl.html.HtmlView{:content \"Benchmark\"} #gorilla_repl.html.HtmlView{:content \"Plot\"}])}"}
;; <=

;; @@
(def encode-data 
  {"small vector integers; 10,000 iterations"  [219 129 196]
   "small vector strings; 10,000 iterations"   [563 374 36]
   "large vector integers; 100 iterations"     [8140 3580 3042]
   "large heterogenous vector; 100 iterations" [10534 5683 2590]
   "small map; 10,000 iterations"              [418 261 145]
   "large map; 100 iterations"                 [7335 3155 2058]
           })
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;birdie-performance.core/encode-data</span>","value":"#'birdie-performance.core/encode-data"}
;; <=

;; @@
(defn plot-encode-benchmark [[name data-in-order]]
  [name (plot/bar-chart [:unoptimized :one  :json] data-in-order)
        (table/table-view (into [] (zipmap [:unoptimized :one :json] data-in-order ))
                          :columns ["phase" "runtime (milliseconds)"] ) 
   ])
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;birdie-performance.core/plot-encode-benchmark</span>","value":"#'birdie-performance.core/plot-encode-benchmark"}
;; <=

;; **
;;; # Encoding Benchmarks
;;; 
;;; Things to note:
;;; 
;;; - The legend, describing the optimization phases
;;; - The rightmost bar in the bar graph is the time for native JSON encoding using `JSON.stringify`
;; **

;; @@
(table/table-view
  (concat [["legend" (table/table-view [['unoptimized "no optimizations, multimethod dispatch"]
                                        ['one "protocol dispatch and transients"]
                                        
                                        ]
                                       :columns ['phase 'optimizations])]]
  (map plot-encode-benchmark encode-data)
          
          )
  :columns [(html/html-view "Benchmark") (html/html-view "Plot")])
;; @@
;; =>
;;; {"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"Benchmark","value":"#gorilla_repl.html.HtmlView{:content \"Benchmark\"}"},{"type":"html","content":"Plot","value":"#gorilla_repl.html.HtmlView{:content \"Plot\"}"}],"value":"[#gorilla_repl.html.HtmlView{:content \"Benchmark\"} #gorilla_repl.html.HtmlView{:content \"Plot\"}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;legend&quot;</span>","value":"\"legend\""},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-symbol'>phase</span>","value":"phase"},{"type":"html","content":"<span class='clj-symbol'>optimizations</span>","value":"optimizations"}],"value":"[phase optimizations]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>unoptimized</span>","value":"unoptimized"},{"type":"html","content":"<span class='clj-string'>&quot;no optimizations, multimethod dispatch&quot;</span>","value":"\"no optimizations, multimethod dispatch\""}],"value":"[unoptimized \"no optimizations, multimethod dispatch\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-symbol'>one</span>","value":"one"},{"type":"html","content":"<span class='clj-string'>&quot;protocol dispatch and transients&quot;</span>","value":"\"protocol dispatch and transients\""}],"value":"[one \"protocol dispatch and transients\"]"}],"value":"#gorilla_repl.table.TableView{:contents [[unoptimized \"no optimizations, multimethod dispatch\"] [one \"protocol dispatch and transients\"]], :opts (:columns [phase optimizations])}"}],"value":"[\"legend\" #gorilla_repl.table.TableView{:contents [[unoptimized \"no optimizations, multimethod dispatch\"] [one \"protocol dispatch and transients\"]], :opts (:columns [phase optimizations])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small vector integers; 10,000 iterations&quot;</span>","value":"\"small vector integers; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"7a37f067-66ae-4a73-acb8-c83c033a4dfa","values":[{"x":"unoptimized","y":219},{"x":"one","y":129},{"x":"json","y":196}]}],"marks":[{"type":"rect","from":{"data":"7a37f067-66ae-4a73-acb8-c83c033a4dfa"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"7a37f067-66ae-4a73-acb8-c83c033a4dfa","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"7a37f067-66ae-4a73-acb8-c83c033a4dfa","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :values ({:x :unoptimized, :y 219} {:x :one, :y 129} {:x :json, :y 196})}], :marks [{:type \"rect\", :from {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>219</span>","value":"219"}],"value":"[:unoptimized 219]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>129</span>","value":"129"}],"value":"[:one 129]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>196</span>","value":"196"}],"value":"[:json 196]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 219] [:one 129] [:json 196]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small vector integers; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :values ({:x :unoptimized, :y 219} {:x :one, :y 129} {:x :json, :y 196})}], :marks [{:type \"rect\", :from {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 219] [:one 129] [:json 196]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small vector strings; 10,000 iterations&quot;</span>","value":"\"small vector strings; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"e57ec4c9-0c34-4dd7-9246-ea5a76f88168","values":[{"x":"unoptimized","y":563},{"x":"one","y":374},{"x":"json","y":36}]}],"marks":[{"type":"rect","from":{"data":"e57ec4c9-0c34-4dd7-9246-ea5a76f88168"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"e57ec4c9-0c34-4dd7-9246-ea5a76f88168","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"e57ec4c9-0c34-4dd7-9246-ea5a76f88168","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :values ({:x :unoptimized, :y 563} {:x :one, :y 374} {:x :json, :y 36})}], :marks [{:type \"rect\", :from {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>563</span>","value":"563"}],"value":"[:unoptimized 563]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>374</span>","value":"374"}],"value":"[:one 374]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>36</span>","value":"36"}],"value":"[:json 36]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 563] [:one 374] [:json 36]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small vector strings; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :values ({:x :unoptimized, :y 563} {:x :one, :y 374} {:x :json, :y 36})}], :marks [{:type \"rect\", :from {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 563] [:one 374] [:json 36]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large vector integers; 100 iterations&quot;</span>","value":"\"large vector integers; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"d18038cb-4669-40ca-bf38-a229d4b6031c","values":[{"x":"unoptimized","y":8140},{"x":"one","y":3580},{"x":"json","y":3042}]}],"marks":[{"type":"rect","from":{"data":"d18038cb-4669-40ca-bf38-a229d4b6031c"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"d18038cb-4669-40ca-bf38-a229d4b6031c","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"d18038cb-4669-40ca-bf38-a229d4b6031c","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :values ({:x :unoptimized, :y 8140} {:x :one, :y 3580} {:x :json, :y 3042})}], :marks [{:type \"rect\", :from {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>8140</span>","value":"8140"}],"value":"[:unoptimized 8140]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>3580</span>","value":"3580"}],"value":"[:one 3580]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>3042</span>","value":"3042"}],"value":"[:json 3042]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 8140] [:one 3580] [:json 3042]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large vector integers; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :values ({:x :unoptimized, :y 8140} {:x :one, :y 3580} {:x :json, :y 3042})}], :marks [{:type \"rect\", :from {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 8140] [:one 3580] [:json 3042]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large heterogenous vector; 100 iterations&quot;</span>","value":"\"large heterogenous vector; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"041a857e-9df1-41a0-8920-b42211476221","values":[{"x":"unoptimized","y":10534},{"x":"one","y":5683},{"x":"json","y":2590}]}],"marks":[{"type":"rect","from":{"data":"041a857e-9df1-41a0-8920-b42211476221"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"041a857e-9df1-41a0-8920-b42211476221","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"041a857e-9df1-41a0-8920-b42211476221","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"041a857e-9df1-41a0-8920-b42211476221\", :values ({:x :unoptimized, :y 10534} {:x :one, :y 5683} {:x :json, :y 2590})}], :marks [{:type \"rect\", :from {:data \"041a857e-9df1-41a0-8920-b42211476221\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>10534</span>","value":"10534"}],"value":"[:unoptimized 10534]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>5683</span>","value":"5683"}],"value":"[:one 5683]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>2590</span>","value":"2590"}],"value":"[:json 2590]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 10534] [:one 5683] [:json 2590]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large heterogenous vector; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"041a857e-9df1-41a0-8920-b42211476221\", :values ({:x :unoptimized, :y 10534} {:x :one, :y 5683} {:x :json, :y 2590})}], :marks [{:type \"rect\", :from {:data \"041a857e-9df1-41a0-8920-b42211476221\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 10534] [:one 5683] [:json 2590]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;small map; 10,000 iterations&quot;</span>","value":"\"small map; 10,000 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"74d499d4-c6bb-4c77-81a6-e91ddf545905","values":[{"x":"unoptimized","y":418},{"x":"one","y":261},{"x":"json","y":145}]}],"marks":[{"type":"rect","from":{"data":"74d499d4-c6bb-4c77-81a6-e91ddf545905"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"74d499d4-c6bb-4c77-81a6-e91ddf545905","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"74d499d4-c6bb-4c77-81a6-e91ddf545905","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :values ({:x :unoptimized, :y 418} {:x :one, :y 261} {:x :json, :y 145})}], :marks [{:type \"rect\", :from {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>418</span>","value":"418"}],"value":"[:unoptimized 418]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>261</span>","value":"261"}],"value":"[:one 261]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>145</span>","value":"145"}],"value":"[:json 145]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 418] [:one 261] [:json 145]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"small map; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :values ({:x :unoptimized, :y 418} {:x :one, :y 261} {:x :json, :y 145})}], :marks [{:type \"rect\", :from {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 418] [:one 261] [:json 145]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-string'>&quot;large map; 100 iterations&quot;</span>","value":"\"large map; 100 iterations\""},{"type":"vega","content":{"width":400,"height":247.2188,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"fa5a3384-e46a-4c7b-a145-9daf5af72856","values":[{"x":"unoptimized","y":7335},{"x":"one","y":3155},{"x":"json","y":2058}]}],"marks":[{"type":"rect","from":{"data":"fa5a3384-e46a-4c7b-a145-9daf5af72856"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"width":{"scale":"x","band":true,"offset":-1},"y":{"scale":"y","field":"data.y"},"y2":{"scale":"y","value":0}},"update":{"fill":{"value":"steelblue"},"opacity":{"value":1}},"hover":{"fill":{"value":"#FF29D2"}}}}],"scales":[{"name":"x","type":"ordinal","range":"width","domain":{"data":"fa5a3384-e46a-4c7b-a145-9daf5af72856","field":"data.x"}},{"name":"y","range":"height","nice":true,"domain":{"data":"fa5a3384-e46a-4c7b-a145-9daf5af72856","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :values ({:x :unoptimized, :y 7335} {:x :one, :y 3155} {:x :json, :y 2058})}], :marks [{:type \"rect\", :from {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"},{"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"<span class='clj-string'>&quot;phase&quot;</span>","value":"\"phase\""},{"type":"html","content":"<span class='clj-string'>&quot;runtime (milliseconds)&quot;</span>","value":"\"runtime (milliseconds)\""}],"value":"[\"phase\" \"runtime (milliseconds)\"]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:unoptimized</span>","value":":unoptimized"},{"type":"html","content":"<span class='clj-long'>7335</span>","value":"7335"}],"value":"[:unoptimized 7335]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:one</span>","value":":one"},{"type":"html","content":"<span class='clj-long'>3155</span>","value":"3155"}],"value":"[:one 3155]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"html","content":"<span class='clj-keyword'>:json</span>","value":":json"},{"type":"html","content":"<span class='clj-long'>2058</span>","value":"2058"}],"value":"[:json 2058]"}],"value":"#gorilla_repl.table.TableView{:contents [[:unoptimized 7335] [:one 3155] [:json 2058]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}"}],"value":"[\"large map; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :values ({:x :unoptimized, :y 7335} {:x :one, :y 3155} {:x :json, :y 2058})}], :marks [{:type \"rect\", :from {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 7335] [:one 3155] [:json 2058]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]"}],"value":"#gorilla_repl.table.TableView{:contents ([\"legend\" #gorilla_repl.table.TableView{:contents [[unoptimized \"no optimizations, multimethod dispatch\"] [one \"protocol dispatch and transients\"]], :opts (:columns [phase optimizations])}] [\"small vector integers; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :values ({:x :unoptimized, :y 219} {:x :one, :y 129} {:x :json, :y 196})}], :marks [{:type \"rect\", :from {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"7a37f067-66ae-4a73-acb8-c83c033a4dfa\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 219] [:one 129] [:json 196]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"small vector strings; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :values ({:x :unoptimized, :y 563} {:x :one, :y 374} {:x :json, :y 36})}], :marks [{:type \"rect\", :from {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"e57ec4c9-0c34-4dd7-9246-ea5a76f88168\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 563] [:one 374] [:json 36]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large vector integers; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :values ({:x :unoptimized, :y 8140} {:x :one, :y 3580} {:x :json, :y 3042})}], :marks [{:type \"rect\", :from {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"d18038cb-4669-40ca-bf38-a229d4b6031c\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 8140] [:one 3580] [:json 3042]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large heterogenous vector; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"041a857e-9df1-41a0-8920-b42211476221\", :values ({:x :unoptimized, :y 10534} {:x :one, :y 5683} {:x :json, :y 2590})}], :marks [{:type \"rect\", :from {:data \"041a857e-9df1-41a0-8920-b42211476221\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"041a857e-9df1-41a0-8920-b42211476221\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 10534] [:one 5683] [:json 2590]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"small map; 10,000 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :values ({:x :unoptimized, :y 418} {:x :one, :y 261} {:x :json, :y 145})}], :marks [{:type \"rect\", :from {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"74d499d4-c6bb-4c77-81a6-e91ddf545905\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 418] [:one 261] [:json 145]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}] [\"large map; 100 iterations\" #gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :values ({:x :unoptimized, :y 7335} {:x :one, :y 3155} {:x :json, :y 2058})}], :marks [{:type \"rect\", :from {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :width {:scale \"x\", :band true, :offset -1}, :y {:scale \"y\", :field \"data.y\"}, :y2 {:scale \"y\", :value 0}}, :update {:fill {:value \"steelblue\"}, :opacity {:value 1}}, :hover {:fill {:value \"#FF29D2\"}}}}], :scales [{:name \"x\", :type \"ordinal\", :range \"width\", :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.x\"}} {:name \"y\", :range \"height\", :nice true, :domain {:data \"fa5a3384-e46a-4c7b-a145-9daf5af72856\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}} #gorilla_repl.table.TableView{:contents [[:unoptimized 7335] [:one 3155] [:json 2058]], :opts (:columns [\"phase\" \"runtime (milliseconds)\"])}]), :opts (:columns [#gorilla_repl.html.HtmlView{:content \"Benchmark\"} #gorilla_repl.html.HtmlView{:content \"Plot\"}])}"}
;; <=

;; @@

;; @@
